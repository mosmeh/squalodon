statement ok
CREATE TABLE __mock_table_tas_2024 (github_id VARCHAR, office_hour VARCHAR);

statement ok
INSERT INTO __mock_table_tas_2024 VALUES
    ('AlSchlo', 'Friday'),
    ('walkingcabbages', 'Thursday'),
    ('averyqi115', 'Friday'),
    ('lanlou1554', 'Wednesday'),
    ('sweetsuro', 'Thursday'),
    ('ChaosZhai', 'Yesterday'),
    ('SDTheSlayer', 'Monday'),
    ('xx01cyx', 'Tuesday'),
    ('yliang412', 'Tuesday'),
    ('thelongmarch-azx', 'Monday');

statement ok
CREATE TABLE __mock_table_schedule (
    day_of_week VARCHAR,
    has_lecture INTEGER
);

statement ok
INSERT INTO __mock_table_schedule VALUES
    ('Monday', 1),
    ('Tuesday', 0),
    ('Wednesday', 1),
    ('Thursday', 0),
    ('Friday', 0),
    ('Saturday', 0),
    ('Sunday', 0);

statement ok
CREATE TABLE __mock_table_1 (colA INTEGER, colB INTEGER);

statement ok
INSERT INTO __mock_table_1 VALUES
    (0, 0),
    (1, 100),
    (2, 200),
    (3, 300),
    (4, 400),
    (5, 500),
    (6, 600),
    (7, 700),
    (8, 800),
    (9, 900),
    (10, 1000),
    (11, 1100),
    (12, 1200),
    (13, 1300),
    (14, 1400),
    (15, 1500),
    (16, 1600),
    (17, 1700),
    (18, 1800),
    (19, 1900),
    (20, 2000),
    (21, 2100),
    (22, 2200),
    (23, 2300),
    (24, 2400),
    (25, 2500),
    (26, 2600),
    (27, 2700),
    (28, 2800),
    (29, 2900),
    (30, 3000),
    (31, 3100),
    (32, 3200),
    (33, 3300),
    (34, 3400),
    (35, 3500),
    (36, 3600),
    (37, 3700),
    (38, 3800),
    (39, 3900),
    (40, 4000),
    (41, 4100),
    (42, 4200),
    (43, 4300),
    (44, 4400),
    (45, 4500),
    (46, 4600),
    (47, 4700),
    (48, 4800),
    (49, 4900),
    (50, 5000),
    (51, 5100),
    (52, 5200),
    (53, 5300),
    (54, 5400),
    (55, 5500),
    (56, 5600),
    (57, 5700),
    (58, 5800),
    (59, 5900),
    (60, 6000),
    (61, 6100),
    (62, 6200),
    (63, 6300),
    (64, 6400),
    (65, 6500),
    (66, 6600),
    (67, 6700),
    (68, 6800),
    (69, 6900),
    (70, 7000),
    (71, 7100),
    (72, 7200),
    (73, 7300),
    (74, 7400),
    (75, 7500),
    (76, 7600),
    (77, 7700),
    (78, 7800),
    (79, 7900),
    (80, 8000),
    (81, 8100),
    (82, 8200),
    (83, 8300),
    (84, 8400),
    (85, 8500),
    (86, 8600),
    (87, 8700),
    (88, 8800),
    (89, 8900),
    (90, 9000),
    (91, 9100),
    (92, 9200),
    (93, 9300),
    (94, 9400),
    (95, 9500),
    (96, 9600),
    (97, 9700),
    (98, 9800),
    (99, 9900);

statement ok
CREATE TABLE __mock_table_123 (number INTEGER);

statement ok
INSERT INTO __mock_table_123 VALUES (1), (2), (3);

statement ok
CREATE TABLE test_simple_seq_1 (col1 INTEGER NOT NULL);

statement ok
INSERT INTO test_simple_seq_1 VALUES
    (0), (1), (2), (3), (4), (5), (6), (7), (8), (9);

statement ok
CREATE TABLE test_simple_seq_2 (col1 INTEGER NOT NULL, col2 INTEGER NOT NULL);

statement ok
INSERT INTO test_simple_seq_2 VALUES
    (0, 10), (1, 11), (2, 12), (3, 13), (4, 14), (5, 15), (6, 16), (7, 17), (8, 18), (9, 19);

# Show office hours on lecture days
# "rowsort" means that the order of result doesn't matter.

query TTTI rowsort
select * from
    __mock_table_tas_2024 inner join __mock_table_schedule
    on office_hour = day_of_week
    where has_lecture = 1;
----
SDTheSlayer Monday Monday 1
lanlou1554 Wednesday Wednesday 1
thelongmarch-azx Monday Monday 1


# The real test begins...

query III rowsort
select * from test_simple_seq_1 s1 inner join test_simple_seq_2 s2 on s1.col1 = s2.col1;
----
0 0 10
1 1 11
2 2 12
3 3 13
4 4 14
5 5 15
6 6 16
7 7 17
8 8 18
9 9 19


statement ok
create table t1(v1 int);


statement ok
insert into t1 (select * from __mock_table_123);


#query III rowsort
#select * from test_simple_seq_2 t2 left join t1 on t1.v1 = t2.col1;
#----
#0 10 NULL
#1 11 1
#2 12 2
#3 13 3
#4 14 NULL
#5 15 NULL
#6 16 NULL
#7 17 NULL
#8 18 NULL
#9 19 NULL


statement ok
create table temp_1(colA int, colB int, colC int, colD int);


statement ok
insert into temp_1 values
    (0 , 1, 6113, 48270),
    (1 , 5, 8005, 22497),
    (2 , 0, 4476, 73541),
    (3 , 2, 290 , 20860),
    (4 , 0, 3362, 47696),
    (5 , 8, 7022, 59586),
    (6 , 2, 170 , 92798),
    (7 , 2, 8524, 19746),
    (8 , 8, 3074, 56174),
    (9 , 2, 2600, 32938),
    (10, 8, 398 , 60977),
    (11, 1, 5472, 33166),
    (12, 3, 1107, 94947),
    (13, 0, 4153, 54624),
    (14, 3, 1907, 48515),
    (15, 6, 9754, 95830),
    (16, 8, 5252, 96696),
    (17, 3, 4819, 99411),
    (18, 9, 666 , 86073),
    (19, 3, 701 , 34675),
    (20, 2, 2307, 97170),
    (21, 4, 194 , 42522),
    (22, 3, 4256, 54404),
    (23, 7, 6037, 70355),
    (24, 6, 1973, 98970),
    (25, 3, 2090, 701  ),
    (26, 2, 5392, 94519),
    (27, 0, 8143, 47916),
    (28, 5, 8710, 194  ),
    (29, 5, 5519, 4256 ),
    (30, 0, 3803, 18357),
    (31, 6, 219 , 2090 ),
    (32, 2, 3842, 38160),
    (33, 8, 991 , 24527),
    (34, 4, 1443, 41478),
    (35, 2, 7564, 14242),
    (36, 6, 2269, 54671),
    (37, 3, 3582, 77724),
    (38, 2, 5267, 69339),
    (39, 0, 1180, 94216),
    (40, 6, 3158, 16603),
    (41, 3, 4878, 85762),
    (42, 1, 34  , 95622),
    (43, 6, 9359, 1443 ),
    (44, 0, 2173, 31618),
    (45, 3, 9616, 67805),
    (46, 2, 2006, 92368),
    (47, 0, 6785, 75686),
    (48, 6, 2696, 19966),
    (49, 1, 3313, 70803),
    (50, 7, 4001, 99484),
    (51, 8, 9106, 28177),
    (52, 1, 8312, 52310),
    (53, 1, 9567, 10624),
    (54, 2, 6866, 15963),
    (55, 1, 4956, 27755),
    (56, 1, 4060, 16227),
    (57, 9, 3683, 78077),
    (58, 8, 483 , 86798),
    (59, 6, 9742, 59516),
    (60, 5, 4347, 34   ),
    (61, 2, 9484, 25743),
    (62, 2, 9506, 13806),
    (63, 2, 7758, 44219),
    (64, 2, 1999, 83926),
    (65, 3, 3886, 72321),
    (66, 3, 8020, 97035),
    (67, 0, 4633, 68232),
    (68, 4, 2699, 52465),
    (69, 8, 755 , 20385),
    (70, 2, 8311, 59841),
    (71, 4, 7826, 97071),
    (72, 7, 7027, 29049),
    (73, 9, 499 , 73848),
    (74, 1, 9088, 12950),
    (75, 3, 3517, 94485),
    (76, 7, 4339, 25951),
    (77, 2, 5801, 59170),
    (78, 3, 5737, 59426),
    (79, 3, 4299, 97298),
    (80, 3, 7683, 21340),
    (81, 0, 2045, 3683 ),
    (82, 8, 5290, 98787),
    (83, 3, 2914, 91662),
    (84, 9, 4626, 92192),
    (85, 9, 849 , 11512),
    (86, 3, 2697, 9484 ),
    (87, 2, 3060, 25890),
    (88, 2, 7329, 40526),
    (89, 1, 9418, 34767),
    (90, 9, 6826, 69422),
    (91, 1, 1411, 8020 ),
    (92, 9, 2110, 28695),
    (93, 4, 2758, 27498),
    (94, 5, 8802, 70169),
    (95, 9, 5706, 15441),
    (96, 1, 4733, 2699 ),
    (97, 1, 2273, 63790),
    (98, 3, 1394, 17139),
    (99, 6, 4482, 57463);


statement ok
create table temp_2(colA int, colB int, colC int);


statement ok
insert into temp_2 values
    (0, 142, 0),
    (1, 993, 1),
    (2, 837, 2),
    (3, 380, 3),
    (4, 240, 4),
    (5, 290, 5),
    (6, 592, 6),
    (7, 88 , 7),
    (8, 194, 8),
    (9, 638, 9),
    (10, 290, 0),
    (11, 878, 1),
    (12, 170, 2),
    (13, 332, 3),
    (14, 680, 4),
    (15, 2, 5),
    (16, 552, 6),
    (17, 561, 7),
    (18, 398, 8),
    (19, 974, 9),
    (20, 739, 0),
    (21, 352, 1),
    (22, 387, 2),
    (23, 598, 3),
    (24, 440, 4),
    (25, 83, 5),
    (26, 57, 6),
    (27, 883, 7),
    (28, 914, 8),
    (29, 538, 9),
    (30, 132, 0),
    (31, 723, 1),
    (32, 666, 2),
    (33, 701, 3),
    (34, 311, 4),
    (35, 214, 5),
    (36, 259, 6),
    (37, 812, 7),
    (38, 194, 8),
    (39, 160, 9),
    (40, 917, 0),
    (41, 949, 1),
    (42, 42 , 2),
    (43, 272, 3),
    (44, 975, 4),
    (45, 518, 5),
    (46, 930, 6),
    (47, 399, 7),
    (48, 924, 8),
    (49, 731, 9),
    (50, 8  , 0),
    (51, 219, 1),
    (52, 276, 2),
    (53, 770, 3),
    (54, 991, 4),
    (55, 390, 5),
    (56, 419, 6),
    (57, 346, 7),
    (58, 898, 8),
    (59, 396, 9),
    (60, 221, 0),
    (61, 208, 1),
    (62, 934, 2),
    (63, 510, 3),
    (64, 147, 4),
    (65, 156, 5),
    (66, 529, 6),
    (67, 86 , 7),
    (68, 384, 8),
    (69, 603, 9),
    (70, 107, 0),
    (71, 867, 1),
    (72, 253, 2),
    (73, 782, 3),
    (74, 124, 4),
    (75, 879, 5),
    (76, 34 , 6),
    (77, 143, 7),
    (78, 494, 8),
    (79, 125, 9),
    (80, 400, 0),
    (81, 187, 1),
    (82, 982, 2),
    (83, 641, 3),
    (84, 711, 4),
    (85, 779, 5),
    (86, 648, 6),
    (87, 590, 7),
    (88, 241, 8),
    (89, 929, 9),
    (90, 914, 0),
    (91, 449, 1),
    (92, 815, 2),
    (93, 225, 3),
    (94, 377, 4),
    (95, 120, 5),
    (96, 662, 6),
    (97, 277, 7),
    (98, 351, 8),
    (99, 722, 9);


statement ok
create table temp_3(colA int, colB int);

statement ok
insert into temp_3 values
    (5, 29),
    (6, 52),
    (0, 142),
    (1, 993),
    (2, 837),
    (3, 52),
    (4, 240),
    (7, 88),
    (8, 14),
    (9, 52),
    (10, 290),
    (11, 878),
    (12, 17),
    (13, 52),
    (14, 680),
    (15, 2),
    (16, 52),
    (17, 561),
    (18, 38),
    (19, 974),
    (20, 739);

query IIIIII rowsort
select * from temp_1 t1 inner join test_simple_seq_2 seq on t1.colA = seq.col2 ;
----
10 8 398 60977 0 10
11 1 5472 33166 1 11
12 3 1107 94947 2 12
13 0 4153 54624 3 13
14 3 1907 48515 4 14
15 6 9754 95830 5 15
16 8 5252 96696 6 16
17 3 4819 99411 7 17
18 9 666 86073 8 18
19 3 701 34675 9 19

query IIIII rowsort
select * from temp_2 t2 inner join test_simple_seq_2 seq on t2.colA = seq.col2 ;
----
10 290 0 0 10
11 878 1 1 11
12 170 2 2 12
13 332 3 3 13
14 680 4 4 14
15 2 5 5 15
16 552 6 6 16
17 561 7 7 17
18 398 8 8 18
19 974 9 9 19


query IIIIII rowsort
select * from __mock_table_1 m1 inner join temp_1 t1 on t1.colA = m1.colB;
----
0 0 0 1 6113 48270


query IIIII rowsort
select * from __mock_table_1 m1 inner join temp_2 t2 on t2.colA = m1.colB;
----
0 0 0 142 0


query IIIIIII rowsort
select * from temp_1 t1 inner join temp_2 t2 on t1.colD = t2.colA;
----
60 5 4347 34 34 311 4

# Duplicate element in join key
statement ok
create table t2(v1 int, v2 int);

statement ok
insert into t2 values
    (0, 45),
    (0, 45),
    (0, 65),
    (1, 45),
    (1, 45),
    (1, 65),
    (2, 45);

query IIIII rowsort
select * from temp_2 inner join t2 on v2 = colA;
----
45 518 5 0 45
45 518 5 0 45
45 518 5 1 45
45 518 5 1 45
45 518 5 2 45
65 156 5 0 65
65 156 5 1 65

statement ok
create table t3(v1 int, v2 int);

statement ok
insert into t3 values
    (0, 1),
    (1, 1),
    (2, 1),
    (3, 1),
    (4, 1),
    (5, 1),
    (6, 1),
    (0, 2),
    (1, 2),
    (2, 2),
    (3, 2),
    (4, 2),
    (5, 2),
    (6, 2);

query IIII rowsort
select * from t3 inner join t3 temp on t3.v1 = temp.v2;
----
1 1 0 1
1 1 1 1
1 1 2 1
1 1 3 1
1 1 4 1
1 1 5 1
1 1 6 1
1 2 0 1
1 2 1 1
1 2 2 1
1 2 3 1
1 2 4 1
1 2 5 1
1 2 6 1
2 1 0 2
2 1 1 2
2 1 2 2
2 1 3 2
2 1 4 2
2 1 5 2
2 1 6 2
2 2 0 2
2 2 1 2
2 2 2 2
2 2 3 2
2 2 4 2
2 2 5 2
2 2 6 2

#query IIII rowsort
#select * from t3 left join t3 temp on t3.v1 = temp.v2;
#----
#0 1 NULL NULL
#0 2 NULL NULL
#1 1 0 1
#1 1 1 1
#1 1 2 1
#1 1 3 1
#1 1 4 1
#1 1 5 1
#1 1 6 1
#1 2 0 1
#1 2 1 1
#1 2 2 1
#1 2 3 1
#1 2 4 1
#1 2 5 1
#1 2 6 1
#2 1 0 2
#2 1 1 2
#2 1 2 2
#2 1 3 2
#2 1 4 2
#2 1 5 2
#2 1 6 2
#2 2 0 2
#2 2 1 2
#2 2 2 2
#2 2 3 2
#2 2 4 2
#2 2 5 2
#2 2 6 2
#3 1 NULL NULL
#3 2 NULL NULL
#4 1 NULL NULL
#4 2 NULL NULL
#5 1 NULL NULL
#5 2 NULL NULL
#6 1 NULL NULL
#6 2 NULL NULL

query IIIII rowsort
select * from temp_3 t3 inner join temp_2 t2 on t3.colB = t2.colA;
----
12 17 17 561 7
13 52 52 276 2
15 2 2 837 2
16 52 52 276 2
18 38 38 194 8
3 52 52 276 2
5 29 29 538 9
6 52 52 276 2
7 88 88 241 8
8 14 14 680 4
9 52 52 276 2

query IIIII rowsort
select * from temp_3 t3 inner join temp_2 t2 on t2.colA = t3.colB;
----
12 17 17 561 7
13 52 52 276 2
15 2 2 837 2
16 52 52 276 2
18 38 38 194 8
3 52 52 276 2
5 29 29 538 9
6 52 52 276 2
7 88 88 241 8
8 14 14 680 4
9 52 52 276 2

#query IIIII rowsort
#select * from temp_3 t3 left join temp_2 t2 on t3.colB = t2.colA;
#----
#0 142 NULL NULL NULL
#1 993 NULL NULL NULL
#10 290 NULL NULL NULL
#11 878 NULL NULL NULL
#12 17 17 561 7
#13 52 52 276 2
#14 680 NULL NULL NULL
#15 2 2 837 2
#16 52 52 276 2
#17 561 NULL NULL NULL
#18 38 38 194 8
#19 974 NULL NULL NULL
#2 837 NULL NULL NULL
#20 739 NULL NULL NULL
#3 52 52 276 2
#4 240 NULL NULL NULL
#5 29 29 538 9
#6 52 52 276 2
#7 88 88 241 8
#8 14 14 680 4
#9 52 52 276 2


# Composite Key
query IIIIIII rowsort
select * from temp_1 t1 inner join temp_2 t2 on t1.colB = t2.colA and t1.colA = t2.colC ;
----
8 8 3074 56174 8 194 8


query IIIIIII rowsort
select * from temp_1 t1 inner join temp_2 t2 on t1.colC = t2.colB and t1.colB = t2.colC;
----
10 8 398 60977 18 398 8
19 3 701 34675 33 701 3
6 2 170 92798 12 170 2


# Switch left and right table column expressions
query IIIIIII rowsort
select * from temp_1 t1 inner join temp_2 t2 on t1.colB = t2.colA and t2.colC = t1.colA ;
----
8 8 3074 56174 8 194 8


query IIIIIII rowsort
select * from temp_1 t1 inner join temp_2 t2 on t1.colC = t2.colB and t2.colC = t1.colB ;
----
10 8 398 60977 18 398 8
19 3 701 34675 33 701 3
6 2 170 92798 12 170 2

statement ok
insert into temp_2 values
(19, 701, 3),
(6, 170, 2);

# More than two join keys to avoid brute force if-else matching
query IIIIIII rowsort
select * from temp_1 t1 inner join temp_2 t2 on t1.colC = t2.colB and t1.colB = t2.colC and t1.colA = t2.colA;
----
19 3 701 34675 19 701 3
6 2 170 92798 6 170 2

query IIIIIII rowsort
select * from temp_1 t1, temp_2 t2 WHERE t1.colA = t2.colA and t1.colB = t2.colC and t1.colA = t2.colC;
----
8 8 3074 56174 8 194 8

statement ok
create table temp_4(colA int, colB int, colC int, colD int);

statement ok
insert into temp_4 values
    (0 , 5, 6133, 48270),
    (1 , 5, 8075, 22497),
    (2 , 0, 476 , 73541),
    (3 , 2, 2908, 20860),
    (4 , 0, 3962, 47696),
    (5 , 8, 7022, 59596),
    (6 , 2, 1700, 92798),
    (7 , 2, 854 , 19746),
    (8 , 8, 3074, 5617 ),
    (9 , 2, 2600, 32938),
    (10, 8, 398 , 60877),
    (11, 1, 5472, 33166),
    (12, 3, 117 , 94947),
    (13, 0, 4143, 54624),
    (14, 3, 1997, 48515),
    (15, 6, 9754, 95430),
    (16, 0, 5252, 66696),
    (17, 2, 4819, 99311),
    (18, 5, 6666, 86073),
    (19, 3, 7010, 34675),
    (20, 2, 2304, 97170),
    (21, 4, 194 , 42322),
    (22, 3, 4256, 54403),
    (23, 7, 6037, 70355),
    (24, 6, 1973, 98971),
    (25, 3, 2090, 711  ),
    (26, 2, 5392, 94515),
    (27, 0, 8143, 47936),
    (28, 5, 8710, 1943 ),
    (29, 4, 5519, 4256 ),
    (30, 0, 3803, 18357),
    (31, 6, 2199, 20903),
    (32, 2, 3849, 38160),
    (33, 8, 9910, 24527),
    (34, 1, 1443, 41478),
    (35, 2, 7564, 14242);

query I rowsort
select t1.colA from temp_1 t1 inner join temp_4 t4 on t1.colA = t4.colA and t1.colB = t4.colB and t1.colC = t4.colC and t1.colD = t4.colD;
----
11
23
30
35
9
